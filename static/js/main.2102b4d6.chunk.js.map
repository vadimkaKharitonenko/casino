{"version":3,"sources":["images/J.png","images/Q.png","images/K.png","images/A.png","images/Wild.png","sounds/hard.mp3","sounds/na.mp3","sounds/good.mp3","sounds/light.mp3","sounds/opening.mp3","components/Slot/Slot.jsx","components/Bet/Bet.jsx","components/Balance/Balance.jsx","components/WinPopup/Winpopup.jsx","components/Slots/Slots.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Slot","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setImages","arr","i","length","innerHTML","style","backgroundImage","J","Q","K","A","Wild","getAllSlots","allSlots","document","getElementsByClassName","shuffle","a","j","x","Math","floor","random","scrollGameLine","ReactDOM","findDOMNode","_slot","top","getRandomArbitrary","min","max","getCentralLine","_thirdSlotItem","getTopLine","_topSlotItem","getBottomLine","_bottomSlotItem","state","allSymbols","allSymbolsRevert","allSymbolsX2","getCentralItem","getTopItem","getBottomItem","_this2","countArr","gameLineFirst","gameLineSecond","gameLineThird","gameLine","concat","gameLineShow","map","item","react_default","createElement","key","ref","node","className","setTimeout","Component","Bet","betUp","currentBet","maxBet","audio4","_audio4","volume","play","setState","isUpdate","getBet","betDown","minBet","sendBetControls","betUpNode","_betUp","betDownNode","_betDown","getBetControls","onClick","src","hard","Balance","balance","getBalance","nextState","currentBalance","Winpopup","showPopup","winMessage","winScore","_popup","opacity","Slots","spin","audio","_audio","barControl","_spinButton","disabled","centralWin","topWin","bottomWin","arrCentral","arrTop","arrBottom","value","textContent","totalWin","arrWin","winAudio","getBetButtonsControl","button1","button2","audio3","_audio3","audio2","_audio2","_slots","components_Slot_Slot","serialNumber","components_Bet_Bet","_bet","NA","light","good","components_Balance_Balance","components_WinPopup_Winpopup","App","components_Slots_Slots","opening","autoPlay","Boolean","window","location","hostname","match","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2102b4d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/J.2b37a63d.png\";","module.exports = __webpack_public_path__ + \"static/media/Q.9ff6ec07.png\";","module.exports = __webpack_public_path__ + \"static/media/K.c3bd93a9.png\";","module.exports = __webpack_public_path__ + \"static/media/A.142d96ad.png\";","module.exports = __webpack_public_path__ + \"static/media/Wild.5f9c6e27.png\";","module.exports = __webpack_public_path__ + \"static/media/hard.2128e1d0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/na.bda5ae7e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/good.4c1720c2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/light.ef666f5e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/opening.3ad9afd2.mp3\";","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Slot.scss';\r\nimport J from '../../images/J.png';\r\nimport Q from '../../images/Q.png';\r\nimport K from '../../images/K.png';\r\nimport A from '../../images/A.png';\r\nimport Wild from '../../images/Wild.png';\r\n\r\nclass Slot extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allSymbols: [\"A\",\"K\",\"K\",\"Q\",\"Q\",\"J\",\"J\",\"J\",\"J\",\"Wild\"], // все возможные символы\r\n      allSymbolsRevert: [\"Wild\",\"J\",\"J\",\"J\",\"J\",\"Q\",\"Q\",\"Q\",\"Q\",\"K\",\"K\",\"A\"], // массив для второй составляющей игровую линию\r\n      allSymbolsX2: [\"A\",\"K\",\"K\",\"Q\",\"Q\",\"J\",\"J\",\"J\",\"J\",\"Q\",\"Q\",\"K\",\"K\",\"A\"], // массив для третьей составляющей игровую линию\r\n    }\r\n\r\n    this.allSlots = [];\r\n  }\r\n\r\n  setImages = (arr) => {\r\n    for(let i = 0; i < arr.length; i++) {\r\n      if (arr[i].innerHTML === 'J') {\r\n        arr[i].style.backgroundImage = \"url(\"+ J + \")\";\r\n      }\r\n      if (arr[i].innerHTML === 'Q') {\r\n        arr[i].style.backgroundImage = \"url(\"+ Q + \")\";\r\n      }\r\n      if (arr[i].innerHTML === 'K') {\r\n        arr[i].style.backgroundImage = \"url(\"+ K + \")\";\r\n      }\r\n      if (arr[i].innerHTML === 'A') {\r\n        arr[i].style.backgroundImage = \"url(\"+ A + \")\";\r\n      }\r\n      if (arr[i].innerHTML === 'Wild') {\r\n        arr[i].style.backgroundImage = \"url(\"+ Wild + \")\";\r\n      }\r\n    }\r\n  }\r\n\r\n  getAllSlots = () => { // TODO: костыль, нужно переделать, получаем все слоты\r\n    this.allSlots = document.getElementsByClassName('Slot__item');\r\n    this.setImages(this.allSlots);\r\n  }\r\n\r\n  shuffle = (a) => { // функция для случайного перемешивания\r\n    var j, x, i;\r\n    for (i = a.length - 1; i > 0; i--) {\r\n        j = Math.floor(Math.random() * (i + 1));\r\n        x = a[i];\r\n        a[i] = a[j];\r\n        a[j] = x;\r\n    }\r\n    return a;\r\n  }\r\n\r\n  componentDidUpdate() { //  функция для прокрутки линий наверх\r\n    const slotDom = ReactDOM.findDOMNode(this._slot);\r\n    slotDom.style.top = \"-2000px\";\r\n    this.props.getCentralItem(this.getCentralLine());\r\n    this.props.getTopItem(this.getTopLine());\r\n    this.props.getBottomItem(this.getBottomLine());\r\n    this.getAllSlots();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllSlots();\r\n  }\r\n\r\n  scrollGameLine = () => { //  функция для прокрутки линий вниз\r\n    const slotDom = ReactDOM.findDOMNode(this._slot);\r\n    slotDom.style.top = \"-130px\";\r\n  }\r\n\r\n  getRandomArbitrary = (min, max) => { //  определяем величину задержки перед прокруткой линии\r\n    return Math.random() * (max - min) + min;\r\n  }\r\n\r\n  getCentralLine = () => {\r\n    return ReactDOM.findDOMNode(this._thirdSlotItem);\r\n  }\r\n\r\n  getTopLine = () => {\r\n    return ReactDOM.findDOMNode(this._topSlotItem);\r\n  }\r\n\r\n  getBottomLine = () => {\r\n    return ReactDOM.findDOMNode(this._bottomSlotItem);\r\n  }\r\n\r\n  render() {\r\n    this.countArr = -1; // счетчик для определения элемента в линии\r\n    \r\n    this.gameLineFirst = this.shuffle(this.state.allSymbols);  // формируем первую линию\r\n    this.gameLineSecond = this.shuffle(this.state.allSymbolsRevert); // формируем вторую линию\r\n    this.gameLineThird = this.shuffle(this.state.allSymbolsX2); // формируем третью линию\r\n    \r\n    this.gameLine = this.gameLineThird.concat(this.gameLineFirst.concat(this.gameLineSecond)); // складываем все линии и получаем конечную линию\r\n    this.gameLineShow = this.gameLine.map((item) => {\r\n      this.countArr += 1;\r\n      if (this.countArr === 2) { // находим центральные элементы \r\n        return <div key={Math.random()} ref={(node) => {this._thirdSlotItem = node;}} className=\"Slot__item\">{item}</div>\r\n      } else if (this.countArr === 1) {\r\n        return <div key={Math.random()} ref={(node) => {this._topSlotItem = node;}} className=\"Slot__item\">{item}</div>\r\n      } else if (this.countArr === 3) {\r\n        return <div key={Math.random()} ref={(node) => {this._bottomSlotItem = node;}} className=\"Slot__item\">{item}</div>\r\n      } else {\r\n        return <div key={Math.random()} className=\"Slot__item\">{item}</div>\r\n      }\r\n    })\r\n\r\n    setTimeout(() => { // функция для задержки перед скроллом линии\r\n      this.scrollGameLine();\r\n    }, this.getRandomArbitrary(1000,2000));\r\n    return (\r\n      <div className=\"Slot\" ref={(node) => {this._slot = node;}}>\r\n        {this.gameLineShow}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slot;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Bet.scss';\r\nimport hard from '../../sounds/hard.mp3';\r\n\r\nclass Bet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isUpdate: false,\r\n    }\r\n\r\n    this.currentBet = 20; // текущая ставка\r\n    this.maxBet = 100; // максимальная ставка\r\n    this.minBet = 20; // минимальная ставка\r\n  }\r\n\r\n  betUp = () => { // поднять ставку\r\n    if (this.currentBet === this.maxBet) {\r\n      const audio4 = ReactDOM.findDOMNode(this._audio4);\r\n      audio4.volume = 0.01;\r\n      audio4.play();\r\n    } else {\r\n      this.currentBet = this.currentBet + 20;\r\n      this.setState({ // обновить компонент\r\n        isUpdate: true,\r\n      });\r\n    }\r\n\r\n    this.props.getBet(this.currentBet); // передаем в родителя текущую ставку\r\n  }\r\n\r\n  betDown = () => { // понизить ставку \r\n    if (this.currentBet === this.minBet) {\r\n       \r\n    } else {\r\n      this.currentBet = this.currentBet - 20; \r\n      this.setState({ // обновить компонент\r\n        isUpdate: true,\r\n      });\r\n    }\r\n\r\n    this.props.getBet(this.currentBet); // передаем в родителя текущую ставку\r\n  }\r\n\r\n  sendBetControls = () => {\r\n    const betUpNode = ReactDOM.findDOMNode(this._betUp);     // получаем ноду кнопки повышения ставки\r\n    const betDownNode = ReactDOM.findDOMNode(this._betDown); // и понижения ставки\r\n  \r\n    this.props.getBetControls(betUpNode, betDownNode);       // отправляем кнопки в родителя\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.sendBetControls();\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"Bet\">\r\n        Ставка <br/> {this.currentBet}\r\n        <div className=\"bet-control\">\r\n          <button className=\"betUp\" onClick={this.betUp} ref={(node) => {this._betUp = node;}}>&and;</button>\r\n          <button className=\"betDown\" onClick={this.betDown} ref={(node) => {this._betDown = node;}}>&or;</button>\r\n          <audio src={hard} ref={(node) => {this._audio4 = node;}}></audio>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Bet;","import React, { Component } from 'react';\r\nimport './Balance.scss';\r\n\r\nclass Balance extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      balance: 5000, // баланс\r\n      isUpdate: false,\r\n    }\r\n\r\n    this.props.getBalance(this.state.balance); // отправляем значение баланса в родителя\r\n  }\r\n\r\n  shouldComponentUpdate(nextState) { // обновляем\r\n    if(this.state.isUpdate !== nextState.isUpdate) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"balance\">Сабжи<br/> {this.props.currentBalance}</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Balance;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Winpopup.scss';\r\n\r\nclass Winpopup extends Component {\r\n  showPopup = () => {\r\n    this.winMessage = 'ДОБРЫЙ ПОЧАНТОК';\r\n\r\n    if (this.props.winScore !== 0) {\r\n      const Winpopup = ReactDOM.findDOMNode(this._popup);\r\n      Winpopup.style.opacity = '1';\r\n\r\n      setTimeout(() => {\r\n        Winpopup.style.opacity = '0';\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.showPopup();\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"Winpopup\" ref={(node) => {this._popup = node;}}>{this.winMessage} {this.props.winScore}</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Winpopup;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Slots.scss';\r\nimport Slot from '../Slot/Slot';\r\nimport Bet from '../Bet/Bet';\r\nimport Balance from '../Balance/Balance'; \r\nimport Winpopup from '../WinPopup/Winpopup';\r\nimport NA from '../../sounds/na.mp3';\r\nimport good from '../../sounds/good.mp3';\r\nimport light from '../../sounds/light.mp3';\r\n\r\nclass Slots extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isUpdate: false,\r\n      arrWin: [10,30,50,70,100],\r\n    }\r\n\r\n    this.balance = 5000;\r\n    this.currentBet = 20; // ставка\r\n    this.arrCentral = []; // массив с центральными элементами\r\n    this.arrTop = [];\r\n    this.arrBottom = [];\r\n    this.totalWin = 0; // сумма выигрыш\r\n\r\n    this.betUpNode = ''; // кнопки контроля ставки\r\n    this.betDownNode = '';\r\n  }\r\n\r\n  spin = () => { // крутить спин\r\n    this.setState({\r\n      isUpdate: true,\r\n    });\r\n\r\n    const audio = ReactDOM.findDOMNode(this._audio);\r\n    audio.volume = 0.01;\r\n    audio.play();\r\n\r\n    const barControl = ReactDOM.findDOMNode(this._spinButton); // находим кнопку спина\r\n\r\n    barControl.disabled = true;                                // и деактивируем ее\r\n\r\n    setTimeout(() => {\r\n      barControl.disabled = false;                             // а после прокрутки, снова активируем\r\n    },3000);                                                   \r\n\r\n    if (this.betUpNode !== (undefined || '')) {                // выключаем кнопки для ставки\r\n      this.betUpNode.disabled = true;                          // и включаем обратно\r\n      this.betDownNode.disabled = true;\r\n    }\r\n\r\n    if (this.betUpNode !== (undefined || '')) {\r\n      setTimeout(() => {\r\n        this.betUpNode.disabled = false;\r\n        this.betDownNode.disabled = false;\r\n      }, 3000);\r\n    }\r\n\r\n    this.balance -= this.currentBet; // вычитаем из баланса сумму ставки\r\n\r\n    setTimeout(() => { // вызываем функцию, определяющую выигрыш и обнуляем старые значение в центральной линии\r\n      this.centralWin();\r\n      this.topWin();\r\n      this.bottomWin();\r\n      this.arrCentral = [];\r\n      this.arrTop = [];\r\n      this.arrBottom = [];\r\n    }, 3000);\r\n  }\r\n\r\n  getBet = (value) => { // получить текущую ставку из ребенка Bet\r\n    this.currentBet = value;\r\n  } \r\n\r\n  getBalance = (value) => { // родитель получает баланс\r\n    this.balance = value;\r\n  }\r\n\r\n  getCentralItem = (value) => { // получаем значения итемов в центральной горизонтали\r\n    this.arrCentral[this.arrCentral.length] = value;\r\n  }\r\n\r\n  getTopItem = (value) => { // получаем значения итемов в верхней горизонтали\r\n    this.arrTop[this.arrTop.length] = value;\r\n  }\r\n\r\n  getBottomItem = (value) => { // получаем значения итемов в нижней горизонтали\r\n    this.arrBottom[this.arrBottom.length] = value;\r\n  }\r\n\r\n  topWin = () => { // определяет выигрыш по верхней линии горизонтали\r\n    if ((this.arrTop[0].textContent === this.arrTop[1].textContent)\r\n    &&(this.arrTop[1].textContent === this.arrTop[2].textContent)) {\r\n      switch(this.arrTop[0].textContent) { // считаем сумму выигрыша\r\n        case 'J':\r\n          this.totalWin = this.state.arrWin[0] * 3 * this.currentBet * 0.2;\r\n          break;\r\n        case 'Q':\r\n          this.totalWin = this.state.arrWin[1] * 3 * this.currentBet * 0.2;\r\n          break; \r\n        case 'K':\r\n          this.totalWin = this.state.arrWin[2] * 3 * this.currentBet * 0.2;\r\n          break;\r\n        case 'A':\r\n          this.totalWin = this.state.arrWin[3] * 3 * this.currentBet * 0.2;\r\n          break;\r\n        case 'Wild':\r\n          this.totalWin = this.state.arrWin[4] * 3 * this.currentBet * 0.2;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    this.balance += this.totalWin; // прибавляем выигрыш к балансу\r\n\r\n    if (this.totalWin !== 0) {\r\n      this.setState({\r\n        isUpdate: true,\r\n      });\r\n      this.totalWin = 0; // обнуляем значение выигрыша\r\n      this.winAudio();\r\n    }\r\n  }\r\n\r\n  centralWin = () => { // определяет выигрыш по центральной горизонтали\r\n    if ((this.arrCentral[0].textContent === this.arrCentral[1].textContent)\r\n    &&(this.arrCentral[1].textContent === this.arrCentral[2].textContent)) {\r\n      switch(this.arrCentral[0].textContent) { // считаем сумму выигрыша\r\n        case 'J':\r\n          this.totalWin = this.state.arrWin[0] * 3 * this.currentBet * 0.2;\r\n          break;\r\n        case 'Q':\r\n          this.totalWin = this.state.arrWin[1] * 3 * this.currentBet * 0.2;\r\n          break; \r\n        case 'K':\r\n          this.totalWin = this.state.arrWin[2] * 3 * this.currentBet * 0.2;\r\n          break;\r\n        case 'A':\r\n          this.totalWin = this.state.arrWin[3] * 3 * this.currentBet * 0.2;\r\n          break;\r\n        case 'Wild':\r\n          this.totalWin = this.state.arrWin[4] * 3 * this.currentBet * 0.2;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    this.balance += this.totalWin; // прибавляем выигрыш к балансу\r\n\r\n    if (this.totalWin !== 0) {\r\n      this.setState({\r\n        isUpdate: true,\r\n      });\r\n      this.totalWin = 0; // обнуляем значение выигрыша\r\n      this.winAudio();\r\n    }\r\n  }\r\n\r\n  bottomWin = () => { // определяет выигрыш по нижней горизонтали\r\n    if ((this.arrBottom[0].textContent === this.arrBottom[1].textContent)\r\n    &&(this.arrBottom[1].textContent === this.arrBottom[2].textContent)) {\r\n      switch(this.arrBottom[0].textContent) { // считаем сумму выигрыша\r\n        case 'J':\r\n          this.totalWin = this.state.arrWin[0] * 3 * this.currentBet * 0.2;\r\n          break;\r\n        case 'Q':\r\n          this.totalWin = this.state.arrWin[1] * 3 * this.currentBet * 0.2;\r\n          break; \r\n        case 'K':\r\n          this.totalWin = this.state.arrWin[2] * 3 * this.currentBet * 0.2;\r\n          break;\r\n        case 'A':\r\n          this.totalWin = this.state.arrWin[3] * 3 * this.currentBet * 0.2;\r\n          break;\r\n        case 'Wild':\r\n          this.totalWin = this.state.arrWin[4] * 3 * this.currentBet * 0.2;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    this.balance += this.totalWin; // прибавляем выигрыш к балансу\r\n\r\n    if (this.totalWin !== 0) {\r\n      this.setState({\r\n        isUpdate: true,\r\n      });\r\n      this.totalWin = 0; // обнуляем значение выигрыша\r\n      this.winAudio();\r\n    }\r\n  }\r\n\r\n  getBetButtonsControl = (button1, button2) => { // функция отключения кнопок управления ставкой\r\n    this.betUpNode = button1;                    // на время вращения спина\r\n    this.betDownNode = button2;\r\n  }\r\n\r\n  winAudio = () => {\r\n    const audio3 = ReactDOM.findDOMNode(this._audio3);\r\n    audio3.volume = 0.01;\r\n    audio3.play();\r\n\r\n    setTimeout(() => {\r\n      const audio2 = ReactDOM.findDOMNode(this._audio2);\r\n      audio2.volume = 0.01;\r\n      audio2.play();\r\n    }, 1000);\r\n  }\r\n\r\n  shouldComponentUpdate(nextState) { // обновляем\r\n    if(this.state.isUpdate !== nextState.isUpdate) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Slots-container\">\r\n        <section className=\"Slots\" ref={(node) => {this._slots = node;}}>\r\n          <Slot key=\"1\" serialNumber={1} getCentralItem={this.getCentralItem} getTopItem={this.getTopItem} getBottomItem={this.getBottomItem}/>\r\n          <Slot key=\"2\" serialNumber={2} getCentralItem={this.getCentralItem} getTopItem={this.getTopItem} getBottomItem={this.getBottomItem}/>\r\n          <Slot key=\"3\" serialNumber={3} getCentralItem={this.getCentralItem} getTopItem={this.getTopItem} getBottomItem={this.getBottomItem}/>\r\n        </section>\r\n        <section className=\"Bar-Control\">\r\n          <div className=\"bet\">\r\n            <Bet getBet={this.getBet} ref={(node) => {this._bet = node;}} getBetControls={this.getBetButtonsControl}/>\r\n          </div>\r\n          <button className=\"Spin\" onClick={this.spin} ref={(node) => {this._spinButton = node;}}>ЖМИ КНОПКУ</button>\r\n          <audio src={NA} ref={(node) => {this._audio = node;}}></audio>\r\n          <audio src={light} ref={(node) => {this._audio2 = node;}}></audio>\r\n          <audio src={good} ref={(node) => {this._audio3 = node;}}></audio>\r\n          <Balance getBalance={this.getBalance} \r\n                   currentBalance={this.balance}/>\r\n        </section>\r\n        <Winpopup winScore={this.totalWin}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slots;\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.scss';\nimport Slots from './components/Slots/Slots';\nimport opening from '../src/sounds/opening.mp3';\n\nclass App extends Component {\n\n  componentDidMount() {\n    const audio = ReactDOM.findDOMNode(this._audio);\n    audio.volume=0.01;\n  }\n\n  render() {\n    \n    return (\n      <div className=\"App\">\n        <Slots/>\n        <audio src={opening} autoPlay ref={(node) => {this._audio = node;}}></audio>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}